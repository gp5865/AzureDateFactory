{
	"name": "ConditionalSpilitDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_empdataDataset_Updated",
						"type": "DatasetReference"
					},
					"name": "Employees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dataflowoutputDataset",
						"type": "DatasetReference"
					},
					"name": "ITEpmloyees"
				},
				{
					"dataset": {
						"referenceName": "ds_dataflowoutputDataset",
						"type": "DatasetReference"
					},
					"name": "HREmployees"
				},
				{
					"dataset": {
						"referenceName": "ds_dataflowoutputDataset",
						"type": "DatasetReference"
					},
					"name": "PayrollEmployees"
				}
			],
			"transformations": [
				{
					"name": "SplitBasedonDepartment"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as short,",
				"          name as string,",
				"          country as string,",
				"          department as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employees",
				"Employees split(department==1,",
				"     department==2,",
				"     department==3,",
				"     disjoint: false) ~> SplitBasedonDepartment@(ITEmployees, HREmployees, PayrollEmployees)",
				"SplitBasedonDepartment@ITEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ITEmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ITEpmloyees",
				"SplitBasedonDepartment@HREmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['HREmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          name,",
				"          country,",
				"          department",
				"     ),",
				"     partitionBy('hash', 1)) ~> HREmployees",
				"SplitBasedonDepartment@PayrollEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['PayrollEmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          name,",
				"          country,",
				"          department",
				"     ),",
				"     partitionBy('hash', 1)) ~> PayrollEmployees"
			]
		}
	}
}